// –Ü–º–ø–æ—Ä—Ç—É—î–º–æ –¥–∞–Ω—ñ –∑ main.js (—è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ, –º–æ–∂–Ω–∞ —Å–∫–æ–ø—ñ—é–≤–∞—Ç–∏ pollsData —Å—é–¥–∏)
// –ê–±–æ –ø—ñ–¥–∫–ª—é—á–∏—Ç–∏ main.js –ø–µ—Ä–µ–¥ report.js –≤ HTML

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–µ—Ä–µ—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –æ–ø–∏—Ç—É–≤–∞–Ω—å —É —Ñ–æ—Ä–º–∞—Ç –¥–ª—è WebDataRocks
function transformPollsDataForWebDataRocks(pollsData) {
    const transformedData = [];

    pollsData.polls.forEach(poll => {
        poll.options.forEach(option => {
            transformedData.push({
                "Poll ID": poll.id,
                "Question": poll.question,
                "Category": poll.category,
                "Option": option.name,
                "Votes": option.votes,
                "Percentage": option.percentage,
                "Total Poll Votes": poll.totalVotes,
                "Option Rank": poll.options.indexOf(option) + 1,
                "Is Top Option": option.votes === Math.max(...poll.options.map(o => o.votes)) ? "Yes" : "No",
                "Vote Range": option.votes < 20 ? "Low (0-19)" :
                    option.votes < 50 ? "Medium (20-49)" :
                        option.votes < 100 ? "High (50-99)" : "Very High (100+)"
            });
        });
    });

    return transformedData;
}

// –î–∞–Ω—ñ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—ó (—è–∫—â–æ pollsData –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π)
const fallbackPollsData = {
    "polls": [
        {
            "id": 1,
            "question": "What is your favorite programming language?",
            "category": "Technology",
            "options": [
                {"name": "JavaScript", "votes": 68, "percentage": 45},
                {"name": "Python", "votes": 68, "percentage": 45},
                {"name": "Java", "votes": 53, "percentage": 35},
                {"name": "C++", "votes": 5, "percentage": 3}
            ],
            "totalVotes": 150
        },
        {
            "id": 2,
            "question": "Which social media platform do you use the most?",
            "category": "Social Media",
            "options": [
                {"name": "Facebook", "votes": 63, "percentage": 35},
                {"name": "Twitter", "votes": 45, "percentage": 25},
                {"name": "Instagram", "votes": 54, "percentage": 30},
                {"name": "LinkedIn", "votes": 18, "percentage": 10}
            ],
            "totalVotes": 180
        },
        {
            "id": 3,
            "question": "What's your preferred way to learn new skills?",
            "category": "Education",
            "options": [
                {"name": "Online courses", "votes": 85, "percentage": 42},
                {"name": "Books", "votes": 65, "percentage": 32},
                {"name": "YouTube videos", "votes": 40, "percentage": 20},
                {"name": "Workshops", "votes": 12, "percentage": 6}
            ],
            "totalVotes": 202
        },
        {
            "id": 4,
            "question": "Which streaming service do you use most?",
            "category": "Entertainment",
            "options": [
                {"name": "Netflix", "votes": 120, "percentage": 48},
                {"name": "Disney+", "votes": 65, "percentage": 26},
                {"name": "Amazon Prime", "votes": 40, "percentage": 16},
                {"name": "HBO Max", "votes": 25, "percentage": 10}
            ],
            "totalVotes": 250
        },
        {
            "id": 5,
            "question": "What's your favorite type of exercise?",
            "category": "Sports",
            "options": [
                {"name": "Running", "votes": 45, "percentage": 30},
                {"name": "Weight training", "votes": 60, "percentage": 40},
                {"name": "Yoga", "votes": 30, "percentage": 20},
                {"name": "Swimming", "votes": 15, "percentage": 10}
            ],
            "totalVotes": 150
        },
        {
            "id": 6,
            "question": "Which work style do you prefer?",
            "category": "Business",
            "options": [
                {"name": "Remote work", "votes": 140, "percentage": 56},
                {"name": "Office work", "votes": 60, "percentage": 24},
                {"name": "Hybrid", "votes": 50, "percentage": 20}
            ],
            "totalVotes": 250
        },
        {
            "id": 7,
            "question": "What's your favorite type of food?",
            "category": "Lifestyle",
            "options": [
                {"name": "Italian", "votes": 80, "percentage": 32},
                {"name": "Asian", "votes": 90, "percentage": 36},
                {"name": "Mexican", "votes": 50, "percentage": 20},
                {"name": "American", "votes": 30, "percentage": 12}
            ],
            "totalVotes": 250
        },
        {
            "id": 8,
            "question": "Which mobile operating system do you prefer?",
            "category": "Technology",
            "options": [
                {"name": "iOS", "votes": 95, "percentage": 48},
                {"name": "Android", "votes": 100, "percentage": 50},
                {"name": "Other", "votes": 5, "percentage": 2}
            ],
            "totalVotes": 200
        }
    ]
};

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∑ localStorage
function loadPollsDataFromStorage() {
    try {
        const savedData = localStorage.getItem('pollsAppData');
        if (savedData) {
            const parsedData = JSON.parse(savedData);
            console.log('Loaded polls data from localStorage for report');
            return parsedData;
        }
    } catch (error) {
        console.error('Error loading data from localStorage:', error);
    }

    // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ fallback –¥–∞–Ω—ñ, —è–∫—â–æ –Ω–µ–º–∞—î –∑–±–µ—Ä–µ–∂–µ–Ω–∏—Ö
    console.log('Using fallback data for report');
    return typeof pollsData !== 'undefined' ? pollsData : fallbackPollsData;
}

// –ì–ª–æ–±–∞–ª—å–Ω–∞ –∑–º—ñ–Ω–Ω–∞ –¥–ª—è pivot
let pivot;

// –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è WebDataRocks –ø—ñ—Å–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏
document.addEventListener('DOMContentLoaded', function() {
    // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –¥–∞–Ω—ñ –∑ localStorage
    const dataToUse = loadPollsDataFromStorage();

    // –ü–µ—Ä–µ—Ç–≤–æ—Ä—é—î–º–æ –¥–∞–Ω—ñ –¥–ª—è WebDataRocks
    const transformedData = transformPollsDataForWebDataRocks(dataToUse);

    console.log('Transformed data for WebDataRocks:', transformedData);

    // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ WebDataRocks
    pivot = new WebDataRocks({
        container: "#wdr-component",
        toolbar: true,
        height: 600,
        report: {
            dataSource: {
                data: transformedData
            },
            slice: {
                rows: [
                    {
                        uniqueName: "Category",
                        caption: "–ö–∞—Ç–µ–≥–æ—Ä—ñ—è"
                    },
                    {
                        uniqueName: "Question",
                        caption: "–ü–∏—Ç–∞–Ω–Ω—è"
                    }
                ],
                columns: [
                    {
                        uniqueName: "Option",
                        caption: "–í–∞—Ä—ñ–∞–Ω—Ç –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ"
                    }
                ],
                measures: [
                    {
                        uniqueName: "Votes",
                        aggregation: "sum",
                        caption: "–ö—ñ–ª—å–∫—ñ—Å—Ç—å –≥–æ–ª–æ—Å—ñ–≤"
                    },
                    {
                        uniqueName: "Percentage",
                        aggregation: "average",
                        caption: "–°–µ—Ä–µ–¥–Ω—ñ–π –≤—ñ–¥—Å–æ—Ç–æ–∫"
                    }
                ]
            },
            options: {
                grid: {
                    showGrandTotals: "on",
                    showTotals: "on"
                }
            },
            formats: [
                {
                    name: "percentage",
                    decimalPlaces: 1,
                    textAlign: "right"
                }
            ]
        },
        customizeCell: function(cell, data) {
            // –ö–∞—Å—Ç–æ–º—ñ–∑–∞—Ü—ñ—è –∫–ª—ñ—Ç–∏–Ω–æ–∫ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, –∫–æ–ª—å–æ—Ä–æ–≤–µ –∫–æ–¥—É–≤–∞–Ω–Ω—è)
            if (data.isClassicTotalRow || data.isClassicTotalColumn || data.isGrandTotalRow || data.isGrandTotalColumn) {
                cell.style.backgroundColor = "#f5f5f5";
                cell.style.fontWeight = "bold";
            }

            // –í–∏–¥—ñ–ª–µ–Ω–Ω—è –≤–∏—Å–æ–∫–∏—Ö –∑–Ω–∞—á–µ–Ω—å –≥–æ–ª–æ—Å—ñ–≤
            if (data.measure && data.measure.uniqueName === "Votes" && data.value > 80) {
                cell.style.backgroundColor = "#e8f5e8";
                cell.style.color = "#2e7d32";
            }
        },
        reportcomplete: function() {
            console.log('WebDataRocks report completed successfully');

            // –î–æ–¥–∞—î–º–æ –∫–Ω–æ–ø–∫—É –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö
            addRefreshButton();
        }
    });

    // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –∫–Ω–æ–ø–∫–∏ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö
    function addRefreshButton() {
        const toolbar = document.querySelector('.wdr-toolbar-wrapper');
        if (toolbar) {
            const refreshBtn = document.createElement('button');
            refreshBtn.innerHTML = 'üîÑ –û–Ω–æ–≤–∏—Ç–∏ –¥–∞–Ω—ñ';
            refreshBtn.className = 'wdr-toolbar-button';
            refreshBtn.style.marginLeft = '10px';
            refreshBtn.style.padding = '5px 10px';
            refreshBtn.style.backgroundColor = '#4CAF50';
            refreshBtn.style.color = 'white';
            refreshBtn.style.border = 'none';
            refreshBtn.style.borderRadius = '4px';
            refreshBtn.style.cursor = 'pointer';

            refreshBtn.addEventListener('click', function() {
                console.log('Manual refresh triggered');
                window.updateReportData();
            });

            toolbar.appendChild(refreshBtn);
        }
    }

    // –ì–ª–æ–±–∞–ª—å–Ω–æ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö —ñ–∑ –∑–æ–≤–Ω—ñ—à–Ω—å–æ–≥–æ –∫–æ–¥—É
    window.updateReportData = function() {
        console.log('Updating report data from localStorage');
        const currentData = loadPollsDataFromStorage();
        const newTransformedData = transformPollsDataForWebDataRocks(currentData);

        if (pivot) {
            pivot.updateData({
                data: newTransformedData
            });
            console.log('Report data updated successfully');
        }
    };

    // –°–ª—É—Ö–∞—á –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω—å localStorage
    window.addEventListener('storage', function(e) {
        if (e.key === 'pollsAppData' && e.newValue) {
            console.log('Detected localStorage update, refreshing report data');
            window.updateReportData();
        }
    });

    // –°–ª—É—Ö–∞—á –¥–ª—è –∫–∞—Å—Ç–æ–º–Ω–æ—ó –ø–æ–¥—ñ—ó –∑ —Ç—ñ—î—ó –∂ –≤–∫–ª–∞–¥–∫–∏
    window.addEventListener('pollsDataUpdated', function(e) {
        console.log('Detected polls data update event, refreshing report');
        window.updateReportData();
    });
});

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ–∂–Ω—ñ 30 —Å–µ–∫—É–Ω–¥
function startAutoRefresh() {
    setInterval(function() {
        console.log('Auto-refreshing report data...');
        window.updateReportData();
    }, 30000); // –û–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–æ–∂–Ω—ñ 30 —Å–µ–∫—É–Ω–¥
}

// –ó–∞–ø—É—Å—Ç–∏—Ç–∏ –∞–≤—Ç–æ–æ–Ω–æ–≤–ª–µ–Ω–Ω—è (–º–æ–∂–Ω–∞ –∑–∞–∫–æ–º–µ–Ω—Ç—É–≤–∞—Ç–∏, —è–∫—â–æ –Ω–µ –ø–æ—Ç—Ä—ñ–±–Ω–æ)
// startAutoRefresh();

// –ï–∫—Å–ø–æ—Ä—Ç—É—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü—ñ—ó –¥–ª—è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –≤ —ñ–Ω—à–∏—Ö —Ñ–∞–π–ª–∞—Ö
if (typeof module !== 'undefined' && module.exports) {
    module.exports = { transformPollsDataForWebDataRocks };
}